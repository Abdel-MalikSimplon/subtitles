1
00:00:02,050 --> 00:00:03,160
Welcome back.

2
00:00:03,160 --> 00:00:04,830
So we took a look
at inner joins.

3
00:00:04,830 --> 00:00:08,850
It's time to figure
out outer joins.

4
00:00:08,850 --> 00:00:10,560
So let's jump back
into our tables.

5
00:00:10,560 --> 00:00:14,690
We have our Movies table
and our Reviews table.

6
00:00:14,690 --> 00:00:17,600
This time around,
we want to show

7
00:00:17,600 --> 00:00:20,590
all the records
in the left table

8
00:00:20,590 --> 00:00:24,700
and display matching records
from the table on the right.

9
00:00:28,470 --> 00:00:32,619
This is where we need
a left outer join.

10
00:00:32,619 --> 00:00:34,590
What this means is
we're going to take

11
00:00:34,590 --> 00:00:37,120
all of the movies
in the Movies table

12
00:00:37,120 --> 00:00:39,670
and definitely
display all of them.

13
00:00:39,670 --> 00:00:42,410
And if it so happens
that there are reviews

14
00:00:42,410 --> 00:00:44,850
that are associated
with these movies,

15
00:00:44,850 --> 00:00:46,111
let's display those too.

16
00:00:49,340 --> 00:00:51,030
To write this left
outer join, we

17
00:00:51,030 --> 00:00:56,320
do select star from Movies,
left outer join Reviews.

18
00:00:56,320 --> 00:00:58,100
And just like the
inner join, we need

19
00:00:58,100 --> 00:01:01,080
to specify how these
tables get joined together

20
00:01:01,080 --> 00:01:06,991
by using on Movies_id
equals Reviews.movie_id.

21
00:01:06,991 --> 00:01:08,490
Here's the result
that gets returned.

22
00:01:08,490 --> 00:01:10,640
And I want you to
notice two things.

23
00:01:10,640 --> 00:01:14,480
First of all, Don Juan is
listed three different times

24
00:01:14,480 --> 00:01:18,740
because there are three
different reviews.

25
00:01:18,740 --> 00:01:21,760
Secondly, notice that
all of the movies

26
00:01:21,760 --> 00:01:26,270
are listed, even though
Peter Pan has no review,

27
00:01:26,270 --> 00:01:28,520
it's just listed
there as a movie.

28
00:01:28,520 --> 00:01:30,940
And there's just an
empty review space

29
00:01:30,940 --> 00:01:34,710
over there on the
right-hand side.

30
00:01:34,710 --> 00:01:37,800
Now that we know we're joining
tables the way we want to,

31
00:01:37,800 --> 00:01:40,370
let's fine-tune this query.

32
00:01:40,370 --> 00:01:43,850
First, we're going
to use table aliases.

33
00:01:43,850 --> 00:01:49,510
We're also just going to return
the title and the review body.

34
00:01:49,510 --> 00:01:52,880
And then lastly, we'll
order it by the review_id.

35
00:01:52,880 --> 00:01:54,940
So here's the results.

36
00:01:54,940 --> 00:01:57,110
And since Peter Pan
doesn't have a review

37
00:01:57,110 --> 00:01:59,850
and we're ordering
by review_id, it

38
00:01:59,850 --> 00:02:05,510
gets listed at the bottom
with no associated review.

39
00:02:05,510 --> 00:02:07,900
So that's left
outer join, where we

40
00:02:07,900 --> 00:02:12,680
display all the movies and
matching reviews, if they exist.

41
00:02:12,680 --> 00:02:16,400
We can also do a
right outer join.

42
00:02:16,400 --> 00:02:19,450
That's going to
display all the reviews

43
00:02:19,450 --> 00:02:22,650
and matching movies,
if they exist.

44
00:02:22,650 --> 00:02:25,510
Let's dive into that.

45
00:02:25,510 --> 00:02:27,370
So let's use a right
outer join to get

46
00:02:27,370 --> 00:02:32,560
all of our reviews and movies
that are associated with them.

47
00:02:32,560 --> 00:02:34,330
Notice here in the
Reviews table, though,

48
00:02:34,330 --> 00:02:37,795
to make this a better
example, I've nulled out two

49
00:02:37,795 --> 00:02:39,780
of the movie_ids.

50
00:02:39,780 --> 00:02:41,350
Let's jump into our query.

51
00:02:41,350 --> 00:02:45,900
And we'll do select star from
Movies, right outer join

52
00:02:45,900 --> 00:02:49,840
Reviews, and then specify
that these two tables join

53
00:02:49,840 --> 00:02:52,060
together on the movie_id.

54
00:02:55,970 --> 00:02:58,410
Here's what the query returns.

55
00:02:58,410 --> 00:03:02,530
Notice here we're listing
every single review,

56
00:03:02,530 --> 00:03:05,230
but we have some missing movies.

57
00:03:05,230 --> 00:03:08,690
That's because, remember,
two of our reviews

58
00:03:08,690 --> 00:03:11,070
don't have an associated movie.

59
00:03:11,070 --> 00:03:13,010
And that's totally fine.

60
00:03:13,010 --> 00:03:14,390
That's our right outer join.

61
00:03:17,090 --> 00:03:19,820
Now that we know we're getting
the appropriate result,

62
00:03:19,820 --> 00:03:22,130
let's polish this query.

63
00:03:22,130 --> 00:03:27,320
We'll use aliases, we'll only
fetch the title and the review

64
00:03:27,320 --> 00:03:30,860
body, and we'll
specify an order.

65
00:03:30,860 --> 00:03:33,510
And here's what the
result looks like.

66
00:03:33,510 --> 00:03:34,730
Alright.

67
00:03:34,730 --> 00:03:37,420
Joins are probably the
most difficult part

68
00:03:37,420 --> 00:03:39,230
about this entire course.

69
00:03:39,230 --> 00:03:41,760
So it's okay if you need
to go back and watch

70
00:03:41,760 --> 00:03:42,780
this whole thing again.

71
00:03:42,780 --> 00:03:44,830
Don't be ashamed, you can do it.

72
00:03:44,830 --> 00:03:48,040
And also you can use
hints, really, it's okay.

73
00:03:48,040 --> 00:03:50,960
Use hints if you need
them — I won't be mad.

74
00:03:50,960 --> 00:03:52,680
So why don't you get
into the challenges,

75
00:03:52,680 --> 00:03:55,340
and I'll see you
in the final level.

76
00:03:55,340 --> 00:04:00,790
Meanwhile, I'm going to go
watch Where danger.lives = true

77
00:04:00,790 --> 00:04:03,600
by Alfred Tablelock.

78
00:04:03,600 --> 00:04:04,800
It's a good movie, really.

79
00:04:10,146 --> 00:04:11,130
[BEEP]

80
00:04:11,130 --> 00:04:13,450
Relationships and orphan
records, it's so sad.

81
00:04:13,450 --> 00:04:14,060
Can't take it.

82
00:04:14,060 --> 00:04:14,710
[BEEP]

83
00:04:14,710 --> 00:04:17,510
It's time for the door to open.

84
00:04:17,510 --> 00:04:18,040
[BEEP]

85
00:04:18,040 --> 00:04:20,180
[GIBBERISH] That wasn't good.

86
00:04:20,180 --> 00:04:21,430
[BEEP]

