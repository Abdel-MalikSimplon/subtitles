1
00:00:01,960 --> 00:00:02,460
All right.

2
00:00:02,460 --> 00:00:04,019
So now in this
section, we're going

3
00:00:04,019 --> 00:00:06,600
to look at a very important
feature of closures,

4
00:00:06,600 --> 00:00:11,110
specifically their ability to
modify their bound variables

5
00:00:11,110 --> 00:00:12,290
in the background.

6
00:00:12,290 --> 00:00:14,550
Let's take a look at that.

7
00:00:14,550 --> 00:00:16,760
So to demonstrate that
specific behavior,

8
00:00:16,760 --> 00:00:18,850
we're going to add
a passenger tracker

9
00:00:18,850 --> 00:00:21,060
to our buildCoveTicketMaker.

10
00:00:21,060 --> 00:00:22,520
What's a passenger tracker?

11
00:00:22,520 --> 00:00:25,140
It will keep track
of how many times

12
00:00:25,140 --> 00:00:29,060
we've given a specific
ticket to any particular mode

13
00:00:29,060 --> 00:00:30,470
of transportation.

14
00:00:30,470 --> 00:00:32,840
So here's our original
function, and we'll

15
00:00:32,840 --> 00:00:35,330
shuffle it up a little bit.

16
00:00:35,330 --> 00:00:37,356
Now, we're going to
stick a new variable here

17
00:00:37,356 --> 00:00:39,230
at the very beginning
of that function called

18
00:00:39,230 --> 00:00:41,690
passengerNumber, and we're
going to set it equal to 0.

19
00:00:41,690 --> 00:00:43,190
What does that mean?

20
00:00:43,190 --> 00:00:45,790
That means that every time
we build a TicketMaker,

21
00:00:45,790 --> 00:00:49,350
it will get a passengerNumber
of 0 to start.

22
00:00:49,350 --> 00:00:51,280
We're still going to
return the function that

23
00:00:51,280 --> 00:00:52,340
has our alert in it.

24
00:00:52,340 --> 00:00:54,680
But inside that
function, we will

25
00:00:54,680 --> 00:00:56,970
increment our passengerNumber.

26
00:00:56,970 --> 00:00:57,970
And what does that mean?

27
00:00:57,970 --> 00:01:00,260
Well, it means that when a
particular TicketMaker is

28
00:01:00,260 --> 00:01:02,200
called, whether
for the submarine

29
00:01:02,200 --> 00:01:05,770
or for the battleship, we
know that a new passenger has

30
00:01:05,770 --> 00:01:06,360
been added.

31
00:01:06,360 --> 00:01:08,560
So we will increase
the amount of tickets

32
00:01:08,560 --> 00:01:09,670
that have been given.

33
00:01:09,670 --> 00:01:11,410
We'll also add to
the alert printing

34
00:01:11,410 --> 00:01:12,410
out the passengerNumber.

35
00:01:16,310 --> 00:01:18,660
Now when we call our
buildCoveTicketMaker

36
00:01:18,660 --> 00:01:21,820
for our submarine, well,
we'll get a TicketMaker back.

37
00:01:21,820 --> 00:01:24,940
And inside that new
TicketMaker, when we call it,

38
00:01:24,940 --> 00:01:28,440
we see our new passengerNumber
incrementer as well as

39
00:01:28,440 --> 00:01:30,730
our new line inside
of our alert.

40
00:01:30,730 --> 00:01:33,470
Something you should notice
is that passengerNumber's

41
00:01:33,470 --> 00:01:38,090
initial value is not evident
here, but it does start at 0

42
00:01:38,090 --> 00:01:40,480
and gets incremented
every single time

43
00:01:40,480 --> 00:01:43,610
our TicketMaker is called.

44
00:01:43,610 --> 00:01:45,410
So let's scoot aside
our semicolon here

45
00:01:45,410 --> 00:01:48,060
and put Mario trying to get
a submarine ticket again.

46
00:01:48,060 --> 00:01:49,400
And what happens?

47
00:01:49,400 --> 00:01:51,950
We get a ticket that says,
here is your transportation

48
00:01:51,950 --> 00:01:53,840
ticket via the submarine.

49
00:01:53,840 --> 00:01:54,990
Welcome, Mario.

50
00:01:54,990 --> 00:01:57,500
You are passenger number 1.

51
00:01:57,500 --> 00:01:59,720
That's because this
is our very first call

52
00:01:59,720 --> 00:02:02,890
to getSubmarineTicket,
and our passengerNumber

53
00:02:02,890 --> 00:02:05,600
has been incremented to 1.

54
00:02:05,600 --> 00:02:08,110
Now, what would
happen if we then

55
00:02:08,110 --> 00:02:10,639
put Toad asking for
a submarine ticket.

56
00:02:10,639 --> 00:02:12,100
He wants to ride with Mario.

57
00:02:12,100 --> 00:02:16,650
So look, we get, you
are passenger number 2.

58
00:02:16,650 --> 00:02:17,290
Wow.

59
00:02:17,290 --> 00:02:18,500
So that's pretty cool, right?

60
00:02:18,500 --> 00:02:21,050
That means that even though
our function's local scope has

61
00:02:21,050 --> 00:02:24,000
completely disappeared,
it has retained

62
00:02:24,000 --> 00:02:27,240
the value every single time
of our incremented variable.

63
00:02:30,271 --> 00:02:31,770
So now that you've
seen how closures

64
00:02:31,770 --> 00:02:35,610
can make ultra-secret changes
on the inside of a function

65
00:02:35,610 --> 00:02:37,450
to their variables,
we're going to give you

66
00:02:37,450 --> 00:02:38,790
some challenges regarding that.

67
00:02:38,790 --> 00:02:41,760
And we'll see you back
in the next section.
