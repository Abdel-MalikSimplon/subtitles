1
00:00:00,000 --> 00:00:24,260
[MUSIC PLAYING]

2
00:00:24,260 --> 00:00:26,520
You're watching CSS
Cross-Country and this is

3
00:00:26,520 --> 00:00:28,180
level five, CSS Safety.

4
00:00:28,180 --> 00:00:31,170
In this level, we're going to
talk about a couple of ways to

5
00:00:31,170 --> 00:00:34,560
deal with user-generated content
and dynamic content,

6
00:00:34,560 --> 00:00:36,600
including protecting your
layout and dealing with

7
00:00:36,600 --> 00:00:39,890
specificity problems.

8
00:00:39,890 --> 00:00:42,580
Let's look at an example
of a basic page layout.

9
00:00:42,580 --> 00:00:45,700
Here we have a header, a
feature, and a body section.

10
00:00:45,700 --> 00:00:47,940
And we've spaced these elements
apart by applying a

11
00:00:47,940 --> 00:00:49,680
margin to the feature section.

12
00:00:49,680 --> 00:00:52,250
This works fine, but what
happens if one of the sections

13
00:00:52,250 --> 00:00:53,450
is removed?

14
00:00:53,450 --> 00:00:55,750
When we remove the feature
section, you can see that this

15
00:00:55,750 --> 00:00:56,810
breaks the layout.

16
00:00:56,810 --> 00:00:58,070
This isn't so good.

17
00:00:58,070 --> 00:00:59,570
This probably isn't the
best way that we

18
00:00:59,570 --> 00:01:00,920
should define our layout.

19
00:01:00,920 --> 00:01:03,580
A better way to space out our
three elements is to apply a

20
00:01:03,580 --> 00:01:05,280
margin to all three of them.

21
00:01:05,280 --> 00:01:08,140
That way, when we remove one of
the sections, you can see

22
00:01:08,140 --> 00:01:09,470
that it does not break
the layout.

23
00:01:09,470 --> 00:01:13,100
We have a consistent margin
throughout our entire page.

24
00:01:13,100 --> 00:01:16,020
When defining margins on
subsequent elements, there's

25
00:01:16,020 --> 00:01:17,770
an important thing that you
should keep in mind.

26
00:01:17,770 --> 00:01:20,860
Something called margin
collapsing can come into play,

27
00:01:20,860 --> 00:01:22,660
and it will affect your margins
in a way that you

28
00:01:22,660 --> 00:01:24,310
might not expect.

29
00:01:24,310 --> 00:01:28,180
For example, you might expect
to see a 60 pixel margin

30
00:01:28,180 --> 00:01:30,480
between your header and your
feature section, because you

31
00:01:30,480 --> 00:01:33,830
have a bottom margin of 40 on
your header, and a top margin

32
00:01:33,830 --> 00:01:36,150
of 20 on your featured
section.

33
00:01:36,150 --> 00:01:39,530
But what will actually happen
is the margin will end up

34
00:01:39,530 --> 00:01:41,800
becoming the larger
of the two values.

35
00:01:41,800 --> 00:01:44,240
So in this case, you will
actually end up with a 40

36
00:01:44,240 --> 00:01:47,230
pixel margin, instead of a 60
pixel margin, because the

37
00:01:47,230 --> 00:01:49,310
margins will collapse.

38
00:01:49,310 --> 00:01:51,620
Likewise, where you might
expect a 30 pixel margin

39
00:01:51,620 --> 00:01:54,190
between feature and body, you're
going to end up with 20

40
00:01:54,190 --> 00:01:56,330
pixels, because that is
the larger of the two.

41
00:01:59,360 --> 00:02:01,920
Collapsing margins will not
occur when one or more of your

42
00:02:01,920 --> 00:02:05,650
elements has padding or border,
relative or absolute

43
00:02:05,650 --> 00:02:08,150
positioning, or a float
left or right.

44
00:02:08,150 --> 00:02:10,930
For more information on
collapsing margins, see link

45
00:02:10,930 --> 00:02:13,690
number one below.

46
00:02:13,690 --> 00:02:16,340
Now we're going to expand on
some of the specificity issues

47
00:02:16,340 --> 00:02:18,360
that we talked about earlier
in the course.

48
00:02:18,360 --> 00:02:21,000
When dealing with user generated
content, specificity

49
00:02:21,000 --> 00:02:22,710
issues can come up often.

50
00:02:22,710 --> 00:02:24,540
Let's look at an example.

51
00:02:24,540 --> 00:02:26,980
Here we have some list items
that were defined according to

52
00:02:26,980 --> 00:02:28,670
the specs of a mock-up.

53
00:02:28,670 --> 00:02:31,530
This works fine, as long as this
list stays only within

54
00:02:31,530 --> 00:02:32,820
the sidebar section.

55
00:02:32,820 --> 00:02:35,750
But what happens if we want to
recreate this list item style

56
00:02:35,750 --> 00:02:37,370
within a different section?

57
00:02:37,370 --> 00:02:39,840
The only way that we can reuse
these styles is by copying and

58
00:02:39,840 --> 00:02:42,010
pasting them, but that
isn't very DRY.

59
00:02:42,010 --> 00:02:45,260
Instead, what we can do is
remove the specificity from

60
00:02:45,260 --> 00:02:46,290
our declaration.

61
00:02:46,290 --> 00:02:49,690
So instead of declaring sidebar
ul li, we can just

62
00:02:49,690 --> 00:02:51,900
declare ul li.

63
00:02:51,900 --> 00:02:54,930
This will allow us to apply this
style to any list item

64
00:02:54,930 --> 00:02:56,490
throughout our document.

65
00:02:56,490 --> 00:02:59,050
However, if we don't want it to
apply to every list item in

66
00:02:59,050 --> 00:03:02,660
our document, what we can do is
declare a class that we can

67
00:03:02,660 --> 00:03:04,670
apply to any unordered
list that we want

68
00:03:04,670 --> 00:03:06,570
to inherit the style.

69
00:03:06,570 --> 00:03:08,500
But wait, what about our
other list items?

70
00:03:08,500 --> 00:03:10,710
Now that we have a class that we
need in order for our list

71
00:03:10,710 --> 00:03:13,750
items to inherit the style,
what happens if unordered

72
00:03:13,750 --> 00:03:16,810
lists are inserted by another
user, or another developer,

73
00:03:16,810 --> 00:03:19,090
throughout the course
of the application?

74
00:03:19,090 --> 00:03:21,500
After doing this, we still need
to go back and declare an

75
00:03:21,500 --> 00:03:23,420
unspecific list item style.

76
00:03:23,420 --> 00:03:26,710
This will allow us to have a
default style in place for any

77
00:03:26,710 --> 00:03:28,850
list items that are added later
throughout the course of

78
00:03:28,850 --> 00:03:31,820
the application.

79
00:03:31,820 --> 00:03:33,640
This is a good time to
talk about resets and

80
00:03:33,640 --> 00:03:34,800
normalization.

81
00:03:34,800 --> 00:03:37,160
It's a good idea to have default
styles in place for

82
00:03:37,160 --> 00:03:41,130
most of your HTML elements and
account for inconsistencies

83
00:03:41,130 --> 00:03:42,760
across browsers.

84
00:03:42,760 --> 00:03:45,160
Some good resources can be found
at links number two and

85
00:03:45,160 --> 00:03:48,310
three below.

86
00:03:48,310 --> 00:03:50,170
You have reached the
end of level five.

87
00:03:50,170 --> 00:03:52,180
It's time to ski down to the
level five challenges.

88
00:03:52,180 --> 00:03:54,940
I'll meet you on the slopes,
but first I have to go look

89
00:03:54,940 --> 00:03:56,190
for my prescription goggles.