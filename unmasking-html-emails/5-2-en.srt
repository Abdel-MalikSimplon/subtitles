1
00:00:02,040 --> 00:00:02,986
Welcome back.

2
00:00:02,986 --> 00:00:04,860
In the last section, we
made a lot of changes

3
00:00:04,860 --> 00:00:07,830
to our layout to
improve small screens.

4
00:00:07,830 --> 00:00:11,100
Unfortunately, this caused a lot
of problems for larger screens.

5
00:00:11,100 --> 00:00:15,400
We're going to go through and
make one more round of changes.

6
00:00:15,400 --> 00:00:16,830
The first problem
that we run into

7
00:00:16,830 --> 00:00:18,820
is something we almost expected.

8
00:00:18,820 --> 00:00:21,700
We know that Outlook
doesn't support max-width.

9
00:00:21,700 --> 00:00:23,605
However, the way
we're going to fix it

10
00:00:23,605 --> 00:00:27,770
is going to be completely
different from before.

11
00:00:27,770 --> 00:00:29,610
We know that this
problem only occurs

12
00:00:29,610 --> 00:00:33,140
in Outlook or clients that
use IE as a rendering engine.

13
00:00:33,140 --> 00:00:36,230
We're going to create a new
conditional comment that

14
00:00:36,230 --> 00:00:39,820
targets Outlook
and IE, and applies

15
00:00:39,820 --> 00:00:43,120
a table only when those
two conditions are met.

16
00:00:43,120 --> 00:00:45,670
We also need to go outside
of our content table

17
00:00:45,670 --> 00:00:48,690
and close the table
that we created.

18
00:00:48,690 --> 00:00:51,590
While we're only showing you the
solution applied to the header,

19
00:00:51,590 --> 00:00:54,800
we have to repeat this process
for every content container

20
00:00:54,800 --> 00:00:55,300
table.

21
00:00:58,390 --> 00:01:00,190
Now we're going to
tackle another edge case

22
00:01:00,190 --> 00:01:03,830
problem in clients using
the Word rendering engine.

23
00:01:03,830 --> 00:01:08,640
When two tables have the value
of left on the align attribute,

24
00:01:08,640 --> 00:01:12,780
Word adds extra spacing around
each table with border spacing.

25
00:01:12,780 --> 00:01:15,440
This extra spacing makes
the two widths larger

26
00:01:15,440 --> 00:01:17,630
than their container, so
they won't stack properly.

27
00:01:20,730 --> 00:01:22,760
This solution is a weird one.

28
00:01:22,760 --> 00:01:25,990
We're actually going to go back
to using two cells to align

29
00:01:25,990 --> 00:01:27,950
our columns, but
we're only going

30
00:01:27,950 --> 00:01:30,820
to do that when clients
are using Microsoft Word,

31
00:01:30,820 --> 00:01:32,430
as their rendering engine.

32
00:01:32,430 --> 00:01:34,650
Here, we're using a
conditional comment

33
00:01:34,650 --> 00:01:38,500
to target all of the clients
using Microsoft Word using

34
00:01:38,500 --> 00:01:42,370
a close cell, and then
opening another cell

35
00:01:42,370 --> 00:01:43,530
to surround our two tables.

36
00:01:46,380 --> 00:01:50,070
Our earlier hack, where we used
two divs with display inline

37
00:01:50,070 --> 00:01:53,310
block actually created
another problem for us.

38
00:01:53,310 --> 00:01:55,630
With our two tables
aligned, they

39
00:01:55,630 --> 00:01:59,280
would be side by side
in our desktop view.

40
00:01:59,280 --> 00:02:03,744
However, display inline block
also adds a little bit of space

41
00:02:03,744 --> 00:02:04,535
around a container.

42
00:02:07,360 --> 00:02:10,539
The solution for this
is, again, very weird.

43
00:02:10,539 --> 00:02:13,820
What we can do is we can
tell those two divs to have

44
00:02:13,820 --> 00:02:15,870
a font size of zero.

45
00:02:15,870 --> 00:02:19,130
This will make clients not
render that extra space

46
00:02:19,130 --> 00:02:22,070
around them, and this won't
impact our content styles

47
00:02:22,070 --> 00:02:24,660
because we have all
of our styles inline

48
00:02:24,660 --> 00:02:26,840
on the table cells
nested within them.

49
00:02:29,600 --> 00:02:31,310
Now we have another
edge case problem

50
00:02:31,310 --> 00:02:34,960
that's specific to one client,
but this time it's Yahoo Mail.

51
00:02:34,960 --> 00:02:38,310
Our entire layout is
being aligned to the left.

52
00:02:38,310 --> 00:02:40,840
If we inspect the CSS,
like we did before,

53
00:02:40,840 --> 00:02:45,750
we can see that Yahoo is
applying margin: 0 to tables.

54
00:02:45,750 --> 00:02:47,240
This overrides our
align: center.

55
00:02:51,100 --> 00:02:53,880
Since this problem only
occurs in Yahoo Mail,

56
00:02:53,880 --> 00:02:57,180
and Yahoo does support
CSS in a style tag,

57
00:02:57,180 --> 00:02:59,660
we can make our fix
in one location.

58
00:02:59,660 --> 00:03:02,880
We're going to add CSS that
targets tables and set

59
00:03:02,880 --> 00:03:06,640
margin: 0 auto with an
important declaration.

60
00:03:06,640 --> 00:03:08,825
This will override Yahoo's CSS.

61
00:03:11,720 --> 00:03:14,250
Our final step is to add
our remaining content

62
00:03:14,250 --> 00:03:15,830
to the bottom of our email.

63
00:03:15,830 --> 00:03:18,140
This is a repetition of
what we've already done,

64
00:03:18,140 --> 00:03:20,790
where we're going to
apply our width of 100%

65
00:03:20,790 --> 00:03:24,020
and our max width of 600
pixels to each table.

66
00:03:28,930 --> 00:03:30,930
It's been a long battle,
but now our email is

67
00:03:30,930 --> 00:03:34,820
looking great in small-screen
clients and large-screen clients,

68
00:03:34,820 --> 00:03:36,440
with or without media queries.

69
00:03:39,729 --> 00:03:42,020
Now it's your turn to make
that final round of changes.

70
00:03:44,585 --> 00:03:45,940
Chk chk, boom.

71
00:03:45,940 --> 00:03:47,359
Oh, this is it.

72
00:03:47,359 --> 00:03:47,858
Ahem.

73
00:03:47,858 --> 00:03:51,181
Oh, man, I was â€” I
almost dropped the mic.

74
00:03:51,181 --> 00:03:53,870
Pick it back up like, "Aw, sorry."

75
00:03:53,870 --> 00:03:54,540
I'm sorry.

76
00:03:54,540 --> 00:03:56,450
I still need that.

